/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/manager": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description services fetched successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            createdAt: string;
                            isBlocked: boolean;
                        }[];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Description */
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                    };
                };
            };
            responses: {
                /** @description service created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            createdAt: string;
                            isBlocked: boolean;
                        } & {
                            APIKey: string;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manager/{id}/block": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description service blocker successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            createdAt: string;
                            isBlocked: boolean;
                        };
                    };
                };
                /** @description service not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manager/{id}/unblock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description service unblocked successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            createdAt: string;
                            isBlocked: boolean;
                        };
                    };
                };
                /** @description service not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manager/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description service deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok: boolean;
                        };
                    };
                };
                /** @description service not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manager/validate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Description */
            requestBody: {
                content: {
                    "application/json": {
                        APIKey: string;
                    };
                };
            };
            responses: {
                /** @description API key is valid */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            createdAt: string;
                            isBlocked: boolean;
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
                /** @description API key is invalid */
                503: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error type
                             * @example about:blank
                             */
                            type: string;
                            /**
                             * @description Error title
                             * @example Unexpected Internal Error
                             */
                            title: string;
                            /**
                             * @description HTTP status code
                             * @example 500
                             */
                            status: number;
                            /**
                             * @description Error detail
                             * @example Generic internal error ocurred.
                             */
                            detail: string;
                            /**
                             * @description Request path
                             * @example /echo
                             */
                            instance?: string;
                            /**
                             * @description Error details
                             * @example {
                             *       "path.to.error": "Error message"
                             *     }
                             */
                            errors?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
